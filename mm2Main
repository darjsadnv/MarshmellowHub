-- protected by sxb4gl150
-- credits to isowka299
-- keyed script requires 70+ unc 

local plr = game:GetService("Players").LocalPlayer
local tween = game:GetService("TweenService")
local correctGameId = 142823291
if game.PlaceId ~= correctGameId then
	-- Kick the player if they are not in the correct game
	print("not in correct game")
	plr:Kick("Looks like you're not in MM2. Follow zengy_v4 on TikTok!")
	return -- Stop the script from running further
end



-- Welcome Text UI
local textui = Instance.new("ScreenGui")
textui.Parent = plr:WaitForChild("PlayerGui")
local text = Instance.new("TextLabel")
text.Parent = textui
text.Text = "Welcome, follow zengy_v4 on tiktok"
text.Font = Enum.Font.DenkOne
text.TextSize = 30
text.BackgroundTransparency = 1
text.TextScaled = false
text.Position = UDim2.new(0, 0, 0, 0)
text.Size = UDim2.new(1, 0, 1, 0)
text.TextColor3 = Color3.new(1, 1, 1)
text.TextStrokeTransparency = 0
local goal = {TextTransparency = 1}
local tween1 = tween:Create(text, TweenInfo.new(5), goal)
tween1:Play()


-- After welcome text fades out
tween1.Completed:Connect(function()
	textui:Destroy()
	local ui = Instance.new("ScreenGui")
	ui.Parent = plr:WaitForChild("PlayerGui")

	-- ImageButton
	local ib = Instance.new("ImageButton")
	ib.Image = "rbxassetid://115146434078797"
	ib.Size = UDim2.new(0, 56, 0, 46)
	ib.Parent = ui
	ib.Position = UDim2.new(0.5, -28, 0.5, -23)

	-- Draggable ImageButton
	local dragging = false
	local dragInput, startPos
	ib.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			startPos = input.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	ib.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if dragging and input == dragInput then
			local delta = input.Position - startPos
			ib.Position = UDim2.new(ib.Position.X.Scale, ib.Position.X.Offset + delta.X, ib.Position.Y.Scale, ib.Position.Y.Offset + delta.Y)
			startPos = input.Position
		end
	end)

	-- Hover effects
	ib.MouseEnter:Connect(function()
		ib:TweenSize(UDim2.new(0, 70, 0, 60), "Out", "Quad", 0.5)
	end)
	ib.MouseLeave:Connect(function()
		ib:TweenSize(UDim2.new(0, 56, 0, 46), "Out", "Quad", 0.5)
	end)

	-- Frame UI (Modern Design)
	local frame = Instance.new("Frame")
	frame.Parent = ui
	frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1) -- Dark background
	frame.BackgroundTransparency = 0.2 -- Slightly transparent
	frame.Size = UDim2.new(0, 400, 0, 350) -- Slightly taller for better spacing
	frame.Position = UDim2.new(0.6, -100,0.5, -70) -- Center the frame
	frame.AnchorPoint = Vector2.new(0.5, 0.5)
	frame.Visible = false
	frame.ClipsDescendants = true

	-- Rounded Corners
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 12)
	corner.Parent = frame

	-- Gradient for Frame
	local frameGradient = Instance.new("UIGradient")
	frameGradient.Parent = frame
	frameGradient.Rotation = 90
	frameGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.new(0.15, 0.15, 0.25)), -- Dark blue
		ColorSequenceKeypoint.new(1, Color3.new(0.1, 0.1, 0.2)) -- Darker blue
	})

	-- Drop Shadow
	local shadow = Instance.new("ImageLabel")
	shadow.Parent = frame
	shadow.BackgroundTransparency = 1
	shadow.Size = UDim2.new(1, 10, 1, 10)
	shadow.Position = UDim2.new(0, -5, 0, -5)
	shadow.Image = "rbxassetid://5234388158" -- Shadow image ID
	shadow.ImageTransparency = 0.5
	shadow.ScaleType = Enum.ScaleType.Slice
	shadow.SliceCenter = Rect.new(10, 10, 118, 118)
	shadow.ZIndex = -1
	-- Title Text (Marshmallow Hub V3)
	local txv3 = Instance.new("TextLabel")
	txv3.Parent = frame
	txv3.Text = "Marshmallow Hub V3"
	txv3.Font = Enum.Font.GothamBold
	txv3.TextSize = 20
	txv3.TextColor3 = Color3.new(1, 1, 1) -- White text
	txv3.BackgroundTransparency = 1 -- Transparent background
	txv3.Size = UDim2.new(1, 0, 0, 30) -- Full width, 30px height
	txv3.Position = UDim2.new(0, 0, 0, 10) -- Positioned 10px from the top
	txv3.TextXAlignment = Enum.TextXAlignment.Center -- Center text horizontally
	txv3.TextYAlignment = Enum.TextYAlignment.Center -- Center text vertically
	txv3.TextStrokeTransparency = 0.5 -- Add a subtle text stroke for better readability
	txv3.TextStrokeColor3 = Color3.new(0, 0, 0) -- Black stroke
	txv3.ZIndex = 2 -- Ensure it's above other elements

	-- Gradient for txv3
	local txv3Gradient = Instance.new("UIGradient")
	txv3Gradient.Parent = txv3
	txv3Gradient.Rotation = 90 -- Vertical gradient
	txv3Gradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.new(0.4, 0.2, 0.6)), -- Purple start
		ColorSequenceKeypoint.new(1, Color3.new(0.2, 0.1, 0.4)) -- Dark purple end
	})

	-- Optional Background for txv3
	local txv3Background = Instance.new("Frame")
	txv3Background.Parent = frame
	txv3Background.BackgroundColor3 = Color3.new(0.15, 0.15, 0.25)
	txv3Background.BackgroundTransparency = 0.7 -- More transparent
	txv3Background.Size = UDim2.new(1, 0, 0, 30) -- Full width, 30px height
	txv3Background.Position = UDim2.new(0, 0, 0, 10) -- Positioned 10px from the top
	txv3Background.ZIndex = 1 -- Ensure it's behind the text

	-- Rounded Corners for Background
	local txv3Corner = Instance.new("UICorner")
	txv3Corner.Parent = txv3Background
	txv3Corner.CornerRadius = UDim.new(0, 8) -- Rounded corners
	-- Title Bar
	local titleBar = Instance.new("Frame")
titleBar.Parent = frame
titleBar.BackgroundColor3 = Color3.new(0.15, 0.15, 0.25)
titleBar.Size = UDim2.new(1, 0, 0, 50) -- Slightly taller
titleBar.Position = UDim2.new(0, 0, 0, 0)

-- Gradient for Title Bar
local titleGradient = Instance.new("UIGradient")
titleGradient.Parent = titleBar
titleGradient.Rotation = 90
titleGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.new(0.2, 0.2, 0.4)), -- Light blue
    ColorSequenceKeypoint.new(1, Color3.new(0.1, 0.1, 0.3)) -- Dark blue
})

-- Rounded Corners for Title Bar
local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 15)
titleCorner.Parent = titleBar

-- Title Text
local title = Instance.new("TextLabel")
title.Parent = titleBar
title.Text = "Marshmallow Hub V3"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = Color3.new(1, 1, 1) -- White text
title.BackgroundTransparency = 1
title.Size = UDim2.new(0, 200, 0, 30)
title.Position = UDim2.new(0.5, -100, 0.5, -15)
title.AnchorPoint = Vector2.new(0.5, 0.5)
title.TextXAlignment = Enum.TextXAlignment.Center

-- Icon for Title
local icon = Instance.new("ImageLabel")
icon.Parent = titleBar
icon.Image = "rbxassetid://1234567890" -- Replace with your icon asset ID
icon.Size = UDim2.new(0, 30, 0, 30)
icon.Position = UDim2.new(0, 10, 0.5, -15)
icon.AnchorPoint = Vector2.new(0, 0.5)
icon.BackgroundTransparency = 1
	--=========
	
	local themeToggle = Instance.new("TextButton")
	themeToggle.Parent = titleBar
	themeToggle.Text = "üåô"
	themeToggle.Font = Enum.Font.GothamBold
	themeToggle.TextSize = 18
	themeToggle.TextColor3 = Color3.new(1, 1, 1)
	themeToggle.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
	themeToggle.Size = UDim2.new(0, 40, 0, 30)
	themeToggle.Position = UDim2.new(1, -50,0.9, -15)
	themeToggle.AnchorPoint = Vector2.new(1, 0.5)
	themeToggle.AutoButtonColor = false

	-- Theme Toggle Functionality
	local isDarkTheme = true
	themeToggle.MouseButton1Click:Connect(function()
		isDarkTheme = not isDarkTheme
		if isDarkTheme then
			themeToggle.Text = "üåô"
			frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
			titleBar.BackgroundColor3 = Color3.new(0.15, 0.15, 0.25)
		else
			themeToggle.Text = "‚òÄÔ∏è"
			frame.BackgroundColor3 = Color3.new(1, 1, 1)
			titleBar.BackgroundColor3 = Color3.new(0.8, 0.8, 0.9)
		end
	end)

	-- Title Text
	local title = Instance.new("TextLabel")
	title.Parent = titleBar
	title.Text = "Follow Zengy_V4 on TikTok"
	title.Font = Enum.Font.GothamBold
	title.TextSize = 18
	title.TextColor3 = Color3.new(1, 1, 1)
	title.BackgroundTransparency = 1
	title.Position = UDim2.new(0.5, 0, 0.5, 0)
	title.AnchorPoint = Vector2.new(0.5, 0.5)
	title.TextScaled = true

	-- Close Button
	local closeButton = Instance.new("TextButton")
	closeButton.Parent = titleBar
	closeButton.Text = "X"
	closeButton.Font = Enum.Font.GothamBold
	closeButton.TextSize = 16
	closeButton.TextColor3 = Color3.new(1, 1, 1)
	closeButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
	closeButton.Position = UDim2.new(1, -10, 0.5, 0)
	closeButton.Size = UDim2.new(0, 30, 0, 30)
	closeButton.AnchorPoint = Vector2.new(1, 0.5)

	-- Close Button Functionality
	closeButton.MouseButton1Click:Connect(function()
		local frameTweenOut = tween:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
			BackgroundTransparency = 1,
			Size = UDim2.new(0, 0, 0, 0)
		})
		frameTweenOut:Play()
		frameTweenOut.Completed:Wait()
		frame.Visible = false
	end)

	-- Draggable Frame
	local frameDragging = false
	local frameDragInput, frameStartPos
	titleBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			frameDragging = true
			frameStartPos = input.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					frameDragging = false
				end
			end)
		end
	end)
	titleBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			frameDragInput = input
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if frameDragging and input == frameDragInput then
			local delta = input.Position - frameStartPos
			frame.Position = UDim2.new(frame.Position.X.Scale, frame.Position.X.Offset + delta.X, frame.Position.Y.Scale, frame.Position.Y.Offset + delta.Y)
			frameStartPos = input.Position
		end
	end)

	-- Content Frame
	local content = Instance.new("Frame")
	content.Parent = frame
	content.BackgroundTransparency = 1
	content.Size = UDim2.new(1, -20, 1, -60)
	content.Position = UDim2.new(0, 10, 0, 50)
	
	
	local function CreateButton(parent, text, positionY)
		local button = Instance.new("TextButton")
		button.Parent = parent
		button.Text = text
		button.Font = Enum.Font.GothamBold
		button.TextSize = 18
		button.TextColor3 = Color3.new(1, 1, 1) -- White text
		button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark background
		button.Size = UDim2.new(0, 200, 0, 40)
		button.Position = UDim2.new(0.5, -100, positionY, -20)
		button.AnchorPoint = Vector2.new(0.5, 0.5)
		button.AutoButtonColor = false

		-- Rounded Corners
		local buttonCorner = Instance.new("UICorner")
		buttonCorner.CornerRadius = UDim.new(0, 8)
		buttonCorner.Parent = button

		-- Gradient for Button
		local buttonGradient = Instance.new("UIGradient")
		buttonGradient.Parent = button
		buttonGradient.Rotation = 90
		buttonGradient.Color = ColorSequence.new({
			ColorSequenceKeypoint.new(0, Color3.new(0.3, 0.3, 0.3)), -- Light gray
			ColorSequenceKeypoint.new(1, Color3.new(0.2, 0.2, 0.2)) -- Dark gray
		})

		-- Hover Effects
		button.MouseEnter:Connect(function()
			tween:Create(button, TweenInfo.new(0.2), {
				BackgroundColor3 = Color3.new(0.4, 0.4, 0.4)
			}):Play()
		end)

		button.MouseLeave:Connect(function()
			tween:Create(button, TweenInfo.new(0.2), {
				BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
			}):Play()
		end)

		return button
	end

	-- Create Buttons
	local speedButton = CreateButton(content, "Speed: Off", 0.2)
	local teleportButton = CreateButton(content, "Teleport", 0.4)
	local jumpButton = CreateButton(content, "Infinite Jump: Off", 0.6)
	local espButton = CreateButton(content, "ESP: Off", 0.8)
	local aimbotButton = CreateButton(content, "Aimbot: Off", 1.0)
	
	-- Speed Button
	speedButton.Position = UDim2.new(0.5, -100, 0.2, -20)
	teleportButton.Position = UDim2.new(0.5, -100, 0.4, -20)
	jumpButton.Position = UDim2.new(0.5, -100, 0.6, -20)
	espButton.Position = UDim2.new(0.5, -100, 0.8, -20)
	aimbotButton.Position = UDim2.new(0.5, -100, 1.0, -20)
	
	-- Speed Bar Frame (Initially hidden)
	local speedBarFrame = Instance.new("Frame")
	speedBarFrame.Parent = ui -- Parent it to the main UI
	speedBarFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1) -- Dark background
	speedBarFrame.Size = UDim2.new(0, 250, 0, 80) -- Size of the frame
	speedBarFrame.Position = UDim2.new(0.56, -220,0.4, -60) -- Position in the middle of the screen
	speedBarFrame.AnchorPoint = Vector2.new(0.5, 0.5) -- Center the frame
	speedBarFrame.Visible = false -- Initially hidden
	speedBarFrame.ZIndex = 2

	-- Rounded Corners for the Frame
	local speedBarCorner = Instance.new("UICorner")
	speedBarCorner.Parent = speedBarFrame
	speedBarCorner.CornerRadius = UDim.new(0, 8) -- Rounded corners

	-- Title Text for Speed Bar
	local speedBarTitle = Instance.new("TextLabel")
	speedBarTitle.Parent = speedBarFrame
	speedBarTitle.Text = "Adjust Speed"
	speedBarTitle.Font = Enum.Font.GothamBold
	speedBarTitle.TextSize = 16
	speedBarTitle.TextColor3 = Color3.new(1, 1, 1) -- White text
	speedBarTitle.BackgroundTransparency = 1 -- Transparent background
	speedBarTitle.Size = UDim2.new(1, 0, 0, 20) -- Full width, 20px height
	speedBarTitle.Position = UDim2.new(0, 0, 0, 5) -- Position at the top
	speedBarTitle.TextXAlignment = Enum.TextXAlignment.Center -- Center text horizontally
	speedBarTitle.ZIndex = 3

	-- Speed Slider Background
	local speedSliderBackground = Instance.new("Frame")
	speedSliderBackground.Parent = speedBarFrame
	speedSliderBackground.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark gray background
	speedSliderBackground.Size = UDim2.new(0, 200, 0, 10) -- Size of the slider background
	speedSliderBackground.Position = UDim2.new(0.9, -100,0.5, 15) -- Position in the middle
	speedSliderBackground.AnchorPoint = Vector2.new(0.5, 0.5) -- Center the slider
	speedSliderBackground.ZIndex = 3

	-- Slider Bar (Green Fill)
	local sliderBar = Instance.new("Frame")
	sliderBar.Parent = speedSliderBackground
	sliderBar.BackgroundColor3 = Color3.new(0, 0.5, 0) -- Green bar
	sliderBar.Size = UDim2.new(0, 0, 1, 0) -- Initially no width
	sliderBar.ZIndex = 4

	-- Slider Handle (Draggable)
	local sliderHandle = Instance.new("TextButton")
	sliderHandle.Parent = speedSliderBackground
	sliderHandle.Text = ""
	sliderHandle.BackgroundColor3 = Color3.new(1, 1, 1) -- White handle
	sliderHandle.Size = UDim2.new(0, 10, 1.5, 0) -- Handle size
	sliderHandle.Position = UDim2.new(0, 0, 0.5, 0) -- Position at the start
	sliderHandle.AnchorPoint = Vector2.new(0, 0.5)
	sliderHandle.ZIndex = 5
	-- Speed Toggle Functionality
	local speedEnabled = false
	local currentSpeed = 16 -- Default speed

	speedButton.MouseButton1Click:Connect(function()
		speedEnabled = not speedEnabled
		if speedEnabled then
			speedButton.Text = "Speed: On"
			speedButton.BackgroundColor3 = Color3.new(0, 0.5, 0) -- Green when enabled
			speedBarFrame.Visible = true -- Show the speed bar frame
		else
			speedButton.Text = "Speed: Off"
			speedButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3) -- Gray when disabled
			speedBarFrame.Visible = false -- Hide the speed bar frame
			plr.Character.Humanoid.WalkSpeed = 16 -- Reset speed to default
		end
	end)

	-- Slider Functionality
	local dragging = false
	local dragStart = nil
	local dragStartX = nil

	sliderHandle.MouseButton1Down:Connect(function()
		dragging = true
		dragStart = sliderHandle.Position.X.Scale
		dragStartX = sliderHandle.AbsolutePosition.X
	end)

	game:GetService("UserInputService").InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position.X - dragStartX
			local newScale = math.clamp(dragStart + delta / speedSliderBackground.AbsoluteSize.X, 0, 1)
			sliderHandle.Position = UDim2.new(newScale, 0, 0.5, 0)
			sliderBar.Size = UDim2.new(newScale, 0, 1, 0)

			-- Update speed based on slider position
			currentSpeed = 16 + (newScale * 50) -- Adjust speed between 16 and 66
			if speedEnabled then
				plr.Character.Humanoid.WalkSpeed = currentSpeed
			end
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position.X - dragStartX
			local newScale = math.clamp(dragStart + delta / speedSlider.AbsoluteSize.X, 0, 1)
			sliderHandle.Position = UDim2.new(newScale, 0, 0.5, 0)
			sliderBar.Size = UDim2.new(newScale, 0, 1, 0)

			-- Update speed based on slider position
			currentSpeed = 16 + (newScale * 50) -- Adjust speed between 16 and 66
			if speedEnabled then
				plr.Character.Humanoid.WalkSpeed = currentSpeed
			end
		end
	end)

	-- Teleport Button
	
	-- =================================
	-- Teleport Functionality
	teleportButton.MouseButton1Click:Connect(function()
		-- Create a new GUI for teleporting
		local teleportGui = Instance.new("ScreenGui")
		teleportGui.Parent = plr:WaitForChild("PlayerGui")

		-- Background Frame
		local background = Instance.new("Frame")
		background.Parent = teleportGui
		background.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
		background.Size = UDim2.new(0, 300, 0, 150)
		background.Position = UDim2.new(0.5, -150, 0.5, -75)
		background.AnchorPoint = Vector2.new(0.5, 0.5)

		-- Player Name TextBox
		local playerTextBox = Instance.new("TextBox")
		playerTextBox.Parent = background
		playerTextBox.PlaceholderText = "Enter Player Name"
		playerTextBox.Size = UDim2.new(0, 250, 0, 40)
		playerTextBox.Position = UDim2.new(0.5, -20, 0.3, -20)
		playerTextBox.AnchorPoint = Vector2.new(0.5, 0.5)
		playerTextBox.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
		playerTextBox.TextColor3 = Color3.new(1, 1, 1)
		playerTextBox.Font = Enum.Font.GothamBold
		playerTextBox.TextSize = 16

		-- Teleport Button
		local teleportConfirmButton = Instance.new("TextButton")
		teleportConfirmButton.Parent = background
		teleportConfirmButton.Text = "Teleport"
		teleportConfirmButton.Size = UDim2.new(0, 100, 0, 40)
		teleportConfirmButton.Position = UDim2.new(0.5, -50, 0.7, -20)
		teleportConfirmButton.AnchorPoint = Vector2.new(0.5, 0.5)
		teleportConfirmButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
		teleportConfirmButton.TextColor3 = Color3.new(1, 1, 1)
		teleportConfirmButton.Font = Enum.Font.GothamBold
		teleportConfirmButton.TextSize = 16

		-- Close Button
		local closeButton = Instance.new("TextButton")
		closeButton.Parent = background
		closeButton.Text = "X"
		closeButton.Size = UDim2.new(0, 30, 0, 30)
		closeButton.Position = UDim2.new(1, -35, 0, 5)
		closeButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
		closeButton.TextColor3 = Color3.new(1, 1, 1)
		closeButton.Font = Enum.Font.GothamBold
		closeButton.TextSize = 16

		-- Teleport Functionality
		teleportConfirmButton.MouseButton1Click:Connect(function()
			local targetPlayerName = playerTextBox.Text
			local targetPlayer = game:GetService("Players"):FindFirstChild(targetPlayerName)
			if targetPlayer then
				local targetCharacter = targetPlayer.Character
				if targetCharacter then
					local targetRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
					if targetRootPart then
						plr.Character.HumanoidRootPart.CFrame = targetRootPart.CFrame
					end
				end
			end
		end)

		-- Close GUI
		closeButton.MouseButton1Click:Connect(function()
			teleportGui:Destroy()
		end)
	end)

	
	-- Toggle State
	local doubleJumpEnabled = false
	local infiniteJumpEnabled = false

	-- Toggle Functionality
	jumpButton.MouseButton1Click:Connect(function()
		doubleJumpEnabled = not doubleJumpEnabled
		infiniteJumpEnabled = not infiniteJumpEnabled -- Toggle infinite jump as well

		if doubleJumpEnabled then
			jumpButton.Text = "Infinite Jump: On"
			jumpButton.BackgroundColor3 = Color3.new(0, 0.5, 0) -- Green when enabled
		else
			jumpButton.Text = "infinite : Off"
			jumpButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3) -- Gray when disabled
		end
	end)

	-- double jump handler= ==========================

	-- ===== ADD THE DOUBLE JUMP AND INFINITE JUMP LOGIC HERE =====
	-- Double Jump and Infinite Jump Logic
	local userInputService = game:GetService("UserInputService")
	local player = game:GetService("Players").LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")

	local canDoubleJump = false
	local hasDoubleJumped = false

	-- Function to handle jumping
	local function handleJump(input)
		if input.KeyCode == Enum.KeyCode.Space then
			if humanoid:GetState() == Enum.HumanoidStateType.Freefall and not hasDoubleJumped and doubleJumpEnabled then
				-- Perform double jump
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				hasDoubleJumped = true
			elseif infiniteJumpEnabled and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
				-- Perform infinite jump
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end
	end

	-- Reset double jump when the player lands
	humanoid.StateChanged:Connect(function(_, newState)
		if newState == Enum.HumanoidStateType.Landed then
			hasDoubleJumped = false
		end
	end)

	-- Listen for jump input
	userInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end -- Ignore if the game is already processing the input
		handleJump(input)
	end)
	-- ===== END OF DOUBLE JUMP AND INFINITE JUMP LOGIC =====

	-- ESP Toggle Button
	

	-- ESP Toggle Functionality
	local espEnabled = false
	local espBoxes = {} -- Stores ESP boxes for each player

	espButton.MouseButton1Click:Connect(function()
		espEnabled = not espEnabled
		if espEnabled then
			espButton.Text = "ESP: On"
			espButton.BackgroundColor3 = Color3.new(0, 0.5, 0)
			EnableESP()
		else
			espButton.Text = "ESP: Off"
			espButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
			DisableESP()
		end
	end)

	-- Function to Enable ESP
	function EnableESP()
		for _, player in pairs(game:GetService("Players"):GetPlayers()) do
			if player ~= plr then
				local character = player.Character
				if character then
					local box = Instance.new("BoxHandleAdornment")
					box.Size = Vector3.new(4, 6, 4)
					box.Adornee = character:FindFirstChild("HumanoidRootPart")
					box.AlwaysOnTop = true
					box.ZIndex = 10
					box.Transparency = 0.5
					box.Color3 = Color3.new(1, 0, 0)
					box.Parent = character
					espBoxes[player] = box
				end
			end
		end
	end

	-- Function to Disable ESP
	function DisableESP()
		for player, box in pairs(espBoxes) do
			box:Destroy()
		end
		espBoxes = {}
	end

	

	-- Aimbot Toggle Functionality
	local aimbotEnabled = false
	aimbotButton.MouseButton1Click:Connect(function()
		aimbotEnabled = not aimbotEnabled
		if aimbotEnabled then
			aimbotButton.Text = "Aimbot: On"
			aimbotButton.BackgroundColor3 = Color3.new(0, 0.5, 0)
			_G.AimbotEnabled = true
		else
			aimbotButton.Text = "Aimbot: Off"
			aimbotButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
			_G.AimbotEnabled = false
		end
	end)

	-- Show frame when ImageButton is clicked
	ib.MouseButton1Click:Connect(function()
		frame.Visible = true
		local frameTweenIn = tween:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			BackgroundTransparency = 0,
			Size = UDim2.new(0, 400, 0, 300)
		})
		frameTweenIn:Play()
	end)
end)

-- Aimbot Code
local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Holding = false

_G.AimbotEnabled = false
_G.TeamCheck = false
_G.AimPart = "Head"
_G.Sensitivity = 0
_G.FOV = 50

local function GetClosestPlayer()
	local MaximumDistance = math.huge
	local Target = nil

	for _, v in next, Players:GetPlayers() do
		if v.Name ~= LocalPlayer.name then
			if _G.TeamCheck == true then
				if v.Team ~= LocalPlayer.Team then
					if v.Character ~= nil then
						if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
							if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
								local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
								local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

								-- Check if the player is within the FOV
								local direction = (v.Character.HumanoidRootPart.Position - Camera.CFrame.Position).unit
								local angle = math.deg(math.acos(direction:Dot(Camera.CFrame.LookVector)))
								if angle < _G.FOV then
									if VectorDistance < MaximumDistance then
										Target = v
										MaximumDistance = VectorDistance
									end
								end
							end
						end
					end
				end
			else
				if v.Character ~= nil then
					if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
						if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
							local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
							local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

							-- Check if the player is within the FOV
							local direction = (v.Character.HumanoidRootPart.Position - Camera.CFrame.Position).unit
							local angle = math.deg(math.acos(direction:Dot(Camera.CFrame.LookVector)))
							if angle < _G.FOV then
								if VectorDistance < MaximumDistance then
									Target = v
									MaximumDistance = VectorDistance
								end
							end
						end
					end
				end
			end
		end
	end
	return Target
end

UserInputService.InputBegan:Connect(function(Input)
	if Input.UserInputType == Enum.UserInputType.MouseButton2 then
		Holding = true
	end
end)

UserInputService.InputEnded:Connect(function(Input)
	if Input.UserInputType == Enum.UserInputType.MouseButton2 then
		Holding = false
	end
end)

RunService.RenderStepped:Connect(function()
	if Holding == true and _G.AimbotEnabled == true then
		local target = GetClosestPlayer()
		if target then
			TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, target.Character[_G.AimPart].Position)}):Play()
		end
	end
end)
